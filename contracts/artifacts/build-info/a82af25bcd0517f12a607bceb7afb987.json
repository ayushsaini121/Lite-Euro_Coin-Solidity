{
	"id": "a82af25bcd0517f12a607bceb7afb987",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20.sol": {
				"content": "\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor() public {\r\n    _name = \"Lite Euro Coin\";\r\n    _symbol = \"E\";\r\n    _decimals = 18;\r\n    _totalSupply = 50000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":11308:19131  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20.sol\":11638:11888  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/BEP20.sol\":9817:9834  address msgSender */\n  0x00\n    /* \"contracts/BEP20.sol\":9837:9849  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/BEP20.sol\":9837:9847  _msgSender */\n  tag_8\n    /* \"contracts/BEP20.sol\":9837:9849  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20.sol\":9856:9862  _owner */\n  0x00\n    /* \"contracts/BEP20.sol\":9856:9874  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/BEP20.sol\":9886:9929  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/BEP20.sol\":9856:9874  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/BEP20.sol\":9886:9929  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/BEP20.sol\":9856:9862  _owner */\n  dup3\n  swap1\n    /* \"contracts/BEP20.sol\":9886:9929  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/BEP20.sol\":11666:11690  _name = \"Lite Euro Coin\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0e\n  dup1\n  dup3\n  mstore\n  shl(0x91, 0x2634ba329022bab9379021b7b4b7)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"contracts/BEP20.sol\":11666:11671  _name */\n  0x06\n  swap2\n    /* \"contracts/BEP20.sol\":11666:11690  _name = \"Lite Euro Coin\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20.sol\":11697:11710  _symbol = \"E\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x01\n  dup1\n  dup3\n  mstore\n  shl(0xf8, 0x45)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"contracts/BEP20.sol\":11697:11704  _symbol */\n  0x05\n  swap2\n    /* \"contracts/BEP20.sol\":11697:11710  _symbol = \"E\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20.sol\":11717:11726  _decimals */\n  0x04\n    /* \"contracts/BEP20.sol\":11717:11731  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/BEP20.sol\":11729:11731  18 */\n  0x12\n    /* \"contracts/BEP20.sol\":11717:11731  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/BEP20.sol\":11753:11779  50000000000000000000000000 */\n  0x295be96e64066972000000\n    /* \"contracts/BEP20.sol\":11738:11750  _totalSupply */\n  0x03\n    /* \"contracts/BEP20.sol\":11738:11779  _totalSupply = 50000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/BEP20.sol\":11796:11806  msg.sender */\n  caller\n    /* \"contracts/BEP20.sol\":11717:11726  _decimals */\n  0x00\n    /* \"contracts/BEP20.sol\":11786:11807  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/BEP20.sol\":11717:11731  _decimals = 18 */\n  0x01\n    /* \"contracts/BEP20.sol\":11786:11807  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/BEP20.sol\":11786:11822  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/BEP20.sol\":11836:11882  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/BEP20.sol\":11796:11806  msg.sender */\n  swap3\n  swap4\n    /* \"contracts/BEP20.sol\":11717:11726  _decimals */\n  swap2\n  swap3\n    /* \"contracts/BEP20.sol\":11836:11882  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/BEP20.sol\":11308:19131  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/BEP20.sol\":3705:3797  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"contracts/BEP20.sol\":3781:3791  msg.sender */\n  caller\n    /* \"contracts/BEP20.sol\":3705:3797  function _msgSender() internal view returns (address payable) {\r... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"contracts/BEP20.sol\":11308:19131  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":11308:19131  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/BEP20.sol\":11308:19131  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20.sol\":12358:12437  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20.sol\":12358:12437  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13398:13542  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":13398:13542  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":12493:12580  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":13987:14279  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":13987:14279  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12086:12165  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":14661:14861  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":14661:14861  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12634:12740  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"contracts/BEP20.sol\":12634:12740  function balanceOf(address account) external view returns (uint256) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"contracts/BEP20.sol\":10610:10740  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BEP20.sol\":11948:12027  function getOwner() external view returns (address) {\r... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20.sol\":10008:10081  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_46\n      tag_49\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12222:12305  function symbol() external view returns (string memory) {\r... */\n    tag_13:\n      tag_22\n      tag_51\n      jump\t// in\n        /* \"contracts/BEP20.sol\":15784:15904  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n        /* \"contracts/BEP20.sol\":15784:15904  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      calldataload\n      tag_58\n      jump\t// in\n        /* \"contracts/BEP20.sol\":15333:15584  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":15333:15584  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12934:13084  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":12934:13084  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/BEP20.sol\":13138:13268  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":13138:13268  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_67\n      jump\t// in\n        /* \"contracts/BEP20.sol\":10885:10988  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"contracts/BEP20.sol\":10885:10988  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12358:12437  function name() external view returns (string memory) {\r... */\n    tag_23:\n        /* \"contracts/BEP20.sol\":12426:12431  _name */\n      0x06\n        /* \"contracts/BEP20.sol\":12419:12431  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":12397:12410  string memory */\n      0x60\n      swap4\n        /* \"contracts/BEP20.sol\":12419:12431  return _name */\n      swap1\n      swap3\n        /* \"contracts/BEP20.sol\":12426:12431  _name */\n      swap1\n      swap2\n        /* \"contracts/BEP20.sol\":12419:12431  return _name */\n      dup4\n      add\n        /* \"contracts/BEP20.sol\":12426:12431  _name */\n      dup3\n        /* \"contracts/BEP20.sol\":12419:12431  return _name */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":12358:12437  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13398:13542  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_30:\n        /* \"contracts/BEP20.sol\":13466:13470  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":13479:13518  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/BEP20.sol\":13488:13500  _msgSender() */\n      tag_77\n        /* \"contracts/BEP20.sol\":13488:13498  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":13488:13500  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/BEP20.sol\":13502:13509  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":13511:13517  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":13479:13487  _approve */\n      tag_79\n        /* \"contracts/BEP20.sol\":13479:13518  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"contracts/BEP20.sol\":13532:13536  true */\n      0x01\n        /* \"contracts/BEP20.sol\":13398:13542  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":12493:12580  function totalSupply() external view returns (uint256) {\r... */\n    tag_32:\n        /* \"contracts/BEP20.sol\":12562:12574  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":12493:12580  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":13987:14279  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_35:\n        /* \"contracts/BEP20.sol\":14078:14082  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":14091:14127  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/BEP20.sol\":14101:14107  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":14109:14118  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":14120:14126  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":14091:14100  _transfer */\n      tag_83\n        /* \"contracts/BEP20.sol\":14091:14127  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/BEP20.sol\":14134:14255  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"contracts/BEP20.sol\":14143:14149  sender */\n      dup5\n        /* \"contracts/BEP20.sol\":14151:14163  _msgSender() */\n      tag_85\n        /* \"contracts/BEP20.sol\":14151:14161  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":14151:14163  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/BEP20.sol\":14165:14254  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"contracts/BEP20.sol\":14203:14209  amount */\n      dup6\n        /* \"contracts/BEP20.sol\":14165:14254  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":14165:14184  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":14165:14176  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":14165:14184  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/BEP20.sol\":14185:14197  _msgSender() */\n      tag_87\n        /* \"contracts/BEP20.sol\":14185:14195  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":14185:14197  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":14165:14198  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20.sol\":14165:14254  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20.sol\":14165:14202  _allowances[sender][_msgSender()].sub */\n      tag_88\n        /* \"contracts/BEP20.sol\":14165:14254  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BEP20.sol\":14134:14142  _approve */\n      tag_79\n        /* \"contracts/BEP20.sol\":14134:14255  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"contracts/BEP20.sol\":14269:14273  true */\n      0x01\n        /* \"contracts/BEP20.sol\":13987:14279  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":12086:12165  function decimals() external view returns (uint8) {\r... */\n    tag_37:\n        /* \"contracts/BEP20.sol\":12150:12159  _decimals */\n      and(0xff, sload(0x04))\n        /* \"contracts/BEP20.sol\":12086:12165  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":14661:14861  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/BEP20.sol\":14741:14745  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":14754:14837  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"contracts/BEP20.sol\":14763:14775  _msgSender() */\n      tag_92\n        /* \"contracts/BEP20.sol\":14763:14773  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":14763:14775  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/BEP20.sol\":14777:14784  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":14786:14836  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_86\n        /* \"contracts/BEP20.sol\":14825:14835  addedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":14786:14797  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":14786:14811  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":14798:14810  _msgSender() */\n      tag_94\n        /* \"contracts/BEP20.sol\":14798:14808  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":14798:14810  _msgSender() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":14786:14811  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/BEP20.sol\":14786:14820  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":14786:14836  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/BEP20.sol\":14786:14824  _allowances[_msgSender()][spender].add */\n      tag_95\n        /* \"contracts/BEP20.sol\":14786:14836  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12634:12740  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":12716:12734  _balances[account] */\n      and\n        /* \"contracts/BEP20.sol\":12693:12700  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":12716:12734  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":12716:12725  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":12716:12734  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":12634:12740  function balanceOf(address account) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10610:10740  function renounceOwnership() public onlyOwner {\r... */\n    tag_45:\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      tag_98\n        /* \"contracts/BEP20.sol\":10212:10222  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP20.sol\":10202:10208  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20.sol\":10202:10224  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20.sol\":10194:10261  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/BEP20.sol\":10705:10706  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":10689:10695  _owner */\n      dup1\n      sload\n        /* \"contracts/BEP20.sol\":10668:10708  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":10689:10695  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BEP20.sol\":10668:10708  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/BEP20.sol\":10705:10706  0 */\n      dup4\n      swap1\n        /* \"contracts/BEP20.sol\":10668:10708  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/BEP20.sol\":10732:10733  0 */\n      0x00\n        /* \"contracts/BEP20.sol\":10715:10734  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/BEP20.sol\":10610:10740  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":11948:12027  function getOwner() external view returns (address) {\r... */\n    tag_47:\n        /* \"contracts/BEP20.sol\":11991:11998  address */\n      0x00\n        /* \"contracts/BEP20.sol\":12014:12021  owner() */\n      tag_102\n        /* \"contracts/BEP20.sol\":12014:12019  owner */\n      tag_49\n        /* \"contracts/BEP20.sol\":12014:12021  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/BEP20.sol\":12007:12021  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20.sol\":11948:12027  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10008:10081  function owner() public view returns (address) {\r... */\n    tag_49:\n        /* \"contracts/BEP20.sol\":10046:10053  address */\n      0x00\n        /* \"contracts/BEP20.sol\":10069:10075  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/BEP20.sol\":10008:10081  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":12222:12305  function symbol() external view returns (string memory) {\r... */\n    tag_51:\n        /* \"contracts/BEP20.sol\":12292:12299  _symbol */\n      0x05\n        /* \"contracts/BEP20.sol\":12285:12299  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":12263:12276  string memory */\n      0x60\n      swap4\n        /* \"contracts/BEP20.sol\":12285:12299  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/BEP20.sol\":12292:12299  _symbol */\n      swap1\n      swap2\n        /* \"contracts/BEP20.sol\":12285:12299  return _symbol */\n      dup4\n      add\n        /* \"contracts/BEP20.sol\":12292:12299  _symbol */\n      dup3\n        /* \"contracts/BEP20.sol\":12285:12299  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n        /* \"contracts/BEP20.sol\":15784:15904  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_58:\n        /* \"contracts/BEP20.sol\":15840:15844  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      tag_109\n        /* \"contracts/BEP20.sol\":10212:10222  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/BEP20.sol\":10202:10208  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20.sol\":10202:10224  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20.sol\":10194:10261  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/BEP20.sol\":15853:15880  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/BEP20.sol\":15859:15871  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20.sol\":15859:15869  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":15859:15871  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20.sol\":15873:15879  amount */\n      dup4\n        /* \"contracts/BEP20.sol\":15853:15858  _mint */\n      tag_114\n        /* \"contracts/BEP20.sol\":15853:15880  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/BEP20.sol\":15894:15898  true */\n      0x01\n        /* \"contracts/BEP20.sol\":15784:15904  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":15333:15584  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_61:\n        /* \"contracts/BEP20.sol\":15418:15422  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":15431:15560  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_76\n        /* \"contracts/BEP20.sol\":15440:15452  _msgSender() */\n      tag_117\n        /* \"contracts/BEP20.sol\":15440:15450  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":15440:15452  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BEP20.sol\":15454:15461  spender */\n      dup5\n        /* \"contracts/BEP20.sol\":15463:15559  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_86\n        /* \"contracts/BEP20.sol\":15502:15517  subtractedValue */\n      dup6\n        /* \"contracts/BEP20.sol\":15463:15559  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20.sol\":15463:15474  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":15463:15488  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20.sol\":15475:15487  _msgSender() */\n      tag_119\n        /* \"contracts/BEP20.sol\":15475:15485  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":15475:15487  _msgSender() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":15463:15488  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/BEP20.sol\":15463:15497  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20.sol\":15463:15559  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20.sol\":15463:15501  _allowances[_msgSender()][spender].sub */\n      tag_88\n        /* \"contracts/BEP20.sol\":15463:15559  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/BEP20.sol\":12934:13084  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_64:\n        /* \"contracts/BEP20.sol\":13005:13009  bool */\n      0x00\n        /* \"contracts/BEP20.sol\":13018:13060  _transfer(_msgSender(), recipient, amount) */\n      tag_76\n        /* \"contracts/BEP20.sol\":13028:13040  _msgSender() */\n      tag_122\n        /* \"contracts/BEP20.sol\":13028:13038  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":13028:13040  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BEP20.sol\":13042:13051  recipient */\n      dup5\n        /* \"contracts/BEP20.sol\":13053:13059  amount */\n      dup5\n        /* \"contracts/BEP20.sol\":13018:13027  _transfer */\n      tag_83\n        /* \"contracts/BEP20.sol\":13018:13060  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/BEP20.sol\":13138:13268  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":13235:13253  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":13212:13219  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":13235:13253  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":13235:13246  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":13235:13253  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":13235:13262  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20.sol\":13138:13268  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":10885:10988  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_70:\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      tag_125\n        /* \"contracts/BEP20.sol\":10212:10222  _msgSender */\n      tag_78\n        /* \"contracts/BEP20.sol\":10212:10224  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/BEP20.sol\":10202:10208  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20.sol\":10202:10224  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20.sol\":10194:10261  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/BEP20.sol\":10954:10982  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/BEP20.sol\":10973:10981  newOwner */\n      dup2\n        /* \"contracts/BEP20.sol\":10954:10972  _transferOwnership */\n      tag_129\n        /* \"contracts/BEP20.sol\":10954:10982  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BEP20.sol\":10885:10988  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":3705:3797  function _msgSender() internal view returns (address payable) {\r... */\n    tag_78:\n        /* \"contracts/BEP20.sol\":3781:3791  msg.sender */\n      caller\n        /* \"contracts/BEP20.sol\":3705:3797  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20.sol\":18414:18734  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":18504:18523  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":18496:18564  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":18579:18600  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":18571:18639  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":18648:18666  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":18648:18659  _allowances */\n      0x02\n        /* \"contracts/BEP20.sol\":18648:18666  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":18648:18675  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":18648:18684  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/BEP20.sol\":18696:18728  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":18414:18734  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":16364:16813  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":16458:16478  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20.sol\":16450:16520  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":16535:16558  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":16527:16598  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/BEP20.sol\":16627:16698  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"contracts/BEP20.sol\":16649:16655  amount */\n      dup2\n        /* \"contracts/BEP20.sol\":16627:16698  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":16627:16644  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":16627:16636  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":16627:16644  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20.sol\":16627:16698  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20.sol\":16627:16648  _balances[sender].sub */\n      tag_88\n        /* \"contracts/BEP20.sol\":16627:16698  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":16607:16624  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":16607:16616  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":16607:16624  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20.sol\":16607:16698  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20.sol\":16728:16748  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":16728:16760  _balances[recipient].add(amount) */\n      tag_138\n      swap1\n        /* \"contracts/BEP20.sol\":16753:16759  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":16728:16760  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20.sol\":16728:16752  _balances[recipient].add */\n      tag_95\n        /* \"contracts/BEP20.sol\":16728:16760  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":16705:16725  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":16705:16714  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":16705:16725  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20.sol\":16705:16760  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/BEP20.sol\":16772:16807  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BEP20.sol\":16705:16725  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/BEP20.sol\":16772:16807  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":16364:16813  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":5664:5842  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/BEP20.sol\":5750:5757  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":5782:5794  errorMessage */\n      dup2\n        /* \"contracts/BEP20.sol\":5774:5780  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/BEP20.sol\":5766:5795  require(b <= a, errorMessage) */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20.sol\":5766:5795  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n      pop\n      pop\n        /* \"contracts/BEP20.sol\":5814:5819  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/BEP20.sol\":5664:5842  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/BEP20.sol\":4837:5004  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_95:\n        /* \"contracts/BEP20.sol\":4895:4902  uint256 */\n      0x00\n        /* \"contracts/BEP20.sol\":4923:4928  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/BEP20.sol\":4943:4949  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/BEP20.sol\":4935:4981  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/BEP20.sol\":4997:4998  c */\n      swap4\n        /* \"contracts/BEP20.sol\":4837:5004  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":17074:17364  function _mint(address account, uint256 amount) internal {\r... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":17146:17167  account != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20.sol\":17138:17203  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/BEP20.sol\":17227:17239  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20.sol\":17227:17251  _totalSupply.add(amount) */\n      tag_149\n      swap1\n        /* \"contracts/BEP20.sol\":17244:17250  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":17227:17251  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20.sol\":17227:17243  _totalSupply.add */\n      tag_95\n        /* \"contracts/BEP20.sol\":17227:17251  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP20.sol\":17212:17224  _totalSupply */\n      0x03\n        /* \"contracts/BEP20.sol\":17212:17251  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":17279:17297  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":17279:17288  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":17279:17297  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BEP20.sol\":17279:17309  _balances[account].add(amount) */\n      tag_150\n      swap1\n        /* \"contracts/BEP20.sol\":17302:17308  amount */\n      dup3\n        /* \"contracts/BEP20.sol\":17279:17309  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20.sol\":17279:17301  _balances[account].add */\n      tag_95\n        /* \"contracts/BEP20.sol\":17279:17309  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":17258:17276  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20.sol\":17258:17267  _balances */\n      0x01\n        /* \"contracts/BEP20.sol\":17258:17276  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20.sol\":17258:17309  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/BEP20.sol\":17321:17358  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/BEP20.sol\":17258:17276  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/BEP20.sol\":17321:17358  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20.sol\":17074:17364  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20.sol\":11086:11301  function _transferOwnership(address newOwner) internal {\r... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20.sol\":11156:11178  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/BEP20.sol\":11148:11221  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/BEP20.sol\":11254:11260  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/BEP20.sol\":11233:11271  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/BEP20.sol\":11254:11260  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/BEP20.sol\":11233:11271  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/BEP20.sol\":11278:11284  _owner */\n      0x00\n        /* \"contracts/BEP20.sol\":11278:11295  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/BEP20.sol\":11086:11301  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158209aa656e272ff52e3bd7f280bcac4154a7a229b0f9537523d74c5e2c2613a2c3364736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100246001600160e01b0361013916565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600e8082526d2634ba329022bab9379021b7b4b760911b60209092019182526100a39160069161013e565b50604080518082019091526001808252604560f81b60209092019182526100cc9160059161013e565b506004805460ff191660121790556a295be96e640669720000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101d6565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017f57805160ff19168380011785556101ac565b828001600101855582156101ac579182015b828111156101ac578251825591602001919060010190610191565b506101b89291506101bc565b5090565b61013b91905b808211156101b857600081556001016101c2565b610e56806101e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158209aa656e272ff52e3bd7f280bcac4154a7a229b0f9537523d74c5e2c2613a2c3364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x139 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP1 DUP3 MSTORE PUSH14 0x2634BA329022BAB9379021B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xA3 SWAP2 PUSH1 0x6 SWAP2 PUSH2 0x13E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xCC SWAP2 PUSH1 0x5 SWAP2 PUSH2 0x13E JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x295BE96E64066972000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x1D6 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x17F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x191 JUMP JUMPDEST POP PUSH2 0x1B8 SWAP3 SWAP2 POP PUSH2 0x1BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x13B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH2 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158209AA656E272FF52 0xE3 0xBD PUSH32 0x280BCAC4154A7A229B0F9537523D74C5E2C2613A2C3364736F6C634300051000 ORIGIN ",
							"sourceMap": "11308:7823:0:-;;;11638:250;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9817:17:0;9837:12;-1:-1:-1;;;;;9837:10:0;:12;:::i;:::-;9856:6;:18;;-1:-1:-1;;;;;;9856:18:0;-1:-1:-1;;;;;9856:18:0;;;;;;;9886:43;;9856:18;;-1:-1:-1;9856:18:0;9886:43;;9856:6;;9886:43;-1:-1:-1;11666:24:0;;;;;;;;;;;;;-1:-1:-1;;;11666:24:0;;;;;;;;;:5;;:24;:::i;:::-;-1:-1:-1;11697:13:0;;;;;;;;;;;;;-1:-1:-1;;;11697:13:0;;;;;;;;;:7;;:13;:::i;:::-;-1:-1:-1;11717:9:0;:14;;-1:-1:-1;;11717:14:0;11729:2;11717:14;;;11753:26;11738:12;:41;;;11796:10;11717:9;11786:21;;;11717:14;11786:21;;;;;;;;:36;;;11836:46;;;;;;11796:10;;11717:9;;11836:46;;;;;;;;;;11308:7823;;3705:92;3781:10;3705:92;;:::o;11308:7823::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11308:7823:0;;;-1:-1:-1;11308:7823:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158209aa656e272ff52e3bd7f280bcac4154a7a229b0f9537523d74c5e2c2613a2c3364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158209AA656E272FF52 0xE3 0xBD PUSH32 0x280BCAC4154A7A229B0F9537523D74C5E2C2613A2C3364736F6C634300051000 ORIGIN ",
							"sourceMap": "11308:7823:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11308:7823:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12358:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12358:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13398:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13398:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12493:87;;;:::i;:::-;;;;;;;;;;;;;;;;13987:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13987:292:0;;;;;;;;;;;;;;;;;:::i;12086:79::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14661:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14661:200:0;;;;;;;;:::i;12634:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12634:106:0;-1:-1:-1;;;;;12634:106:0;;:::i;10610:130::-;;;:::i;:::-;;11948:79;;;:::i;:::-;;;;-1:-1:-1;;;;;11948:79:0;;;;;;;;;;;;;;10008:73;;;:::i;12222:83::-;;;:::i;15784:120::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15784:120:0;;:::i;15333:251::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15333:251:0;;;;;;;;:::i;12934:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12934:150:0;;;;;;;;:::i;13138:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13138:130:0;;;;;;;;;;:::i;10885:103::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10885:103:0;-1:-1:-1;;;;;10885:103:0;;:::i;12358:79::-;12426:5;12419:12;;;;;;;;-1:-1:-1;;12419:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:13;;12419:12;;12426:5;;12419:12;;12426:5;12419:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12358:79;:::o;13398:144::-;13466:4;13479:39;13488:12;:10;:12::i;:::-;13502:7;13511:6;13479:8;:39::i;:::-;-1:-1:-1;13532:4:0;13398:144;;;;:::o;12493:87::-;12562:12;;12493:87;:::o;13987:292::-;14078:4;14091:36;14101:6;14109:9;14120:6;14091:9;:36::i;:::-;14134:121;14143:6;14151:12;:10;:12::i;:::-;14165:89;14203:6;14165:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14165:19:0;;;;;;:11;:19;;;;;;14185:12;:10;:12::i;:::-;-1:-1:-1;;;;;14165:33:0;;;;;;;;;;;;-1:-1:-1;14165:33:0;;;:89;;:37;:89;:::i;:::-;14134:8;:121::i;:::-;-1:-1:-1;14269:4:0;13987:292;;;;;:::o;12086:79::-;12150:9;;;;12086:79;:::o;14661:200::-;14741:4;14754:83;14763:12;:10;:12::i;:::-;14777:7;14786:50;14825:10;14786:11;:25;14798:12;:10;:12::i;:::-;-1:-1:-1;;;;;14786:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14786:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;12634:106::-;-1:-1:-1;;;;;12716:18:0;12693:7;12716:18;;;:9;:18;;;;;;;12634:106::o;10610:130::-;10212:12;:10;:12::i;:::-;10202:6;;-1:-1:-1;;;;;10202:6:0;;;:22;;;10194:67;;;;;-1:-1:-1;;;10194:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10705:1;10689:6;;10668:40;;-1:-1:-1;;;;;10689:6:0;;;;10668:40;;10705:1;;10668:40;10732:1;10715:19;;-1:-1:-1;;;;;;10715:19:0;;;10610:130::o;11948:79::-;11991:7;12014;:5;:7::i;:::-;12007:14;;11948:79;:::o;10008:73::-;10046:7;10069:6;-1:-1:-1;;;;;10069:6:0;10008:73;:::o;12222:83::-;12292:7;12285:14;;;;;;;;-1:-1:-1;;12285:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12263:13;;12285:14;;12292:7;;12285:14;;12292:7;12285:14;;;;;;;;;;;;;;;;;;;;;;;;15784:120;15840:4;10212:12;:10;:12::i;:::-;10202:6;;-1:-1:-1;;;;;10202:6:0;;;:22;;;10194:67;;;;;-1:-1:-1;;;10194:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15853:27;15859:12;:10;:12::i;:::-;15873:6;15853:5;:27::i;:::-;-1:-1:-1;15894:4:0;15784:120;;;:::o;15333:251::-;15418:4;15431:129;15440:12;:10;:12::i;:::-;15454:7;15463:96;15502:15;15463:96;;;;;;;;;;;;;;;;;:11;:25;15475:12;:10;:12::i;:::-;-1:-1:-1;;;;;15463:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;15463:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;12934:150::-;13005:4;13018:42;13028:12;:10;:12::i;:::-;13042:9;13053:6;13018:9;:42::i;13138:130::-;-1:-1:-1;;;;;13235:18:0;;;13212:7;13235:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13138:130::o;10885:103::-;10212:12;:10;:12::i;:::-;10202:6;;-1:-1:-1;;;;;10202:6:0;;;:22;;;10194:67;;;;;-1:-1:-1;;;10194:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10954:28;10973:8;10954:18;:28::i;:::-;10885:103;:::o;3705:92::-;3781:10;3705:92;:::o;18414:320::-;-1:-1:-1;;;;;18504:19:0;;18496:68;;;;-1:-1:-1;;;18496:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18579:21:0;;18571:68;;;;-1:-1:-1;;;18571:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18648:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;18696:32;;;;;;;;;;;;;;;;;18414:320;;;:::o;16364:449::-;-1:-1:-1;;;;;16458:20:0;;16450:70;;;;-1:-1:-1;;;16450:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16535:23:0;;16527:71;;;;-1:-1:-1;;;16527:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16627;16649:6;16627:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16627:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;16607:17:0;;;;;;;:9;:17;;;;;;:91;;;;16728:20;;;;;;;:32;;16753:6;16728:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;16705:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;16772:35;;;;;;;16705:20;;16772:35;;;;;;;;;;;;;16364:449;;;:::o;5664:178::-;5750:7;5782:12;5774:6;;;;5766:29;;;;-1:-1:-1;;;5766:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5766:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5814:5:0;;;5664:178::o;4837:167::-;4895:7;4923:5;;;4943:6;;;;4935:46;;;;;-1:-1:-1;;;4935:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4997:1;4837:167;-1:-1:-1;;;4837:167:0:o;17074:290::-;-1:-1:-1;;;;;17146:21:0;;17138:65;;;;;-1:-1:-1;;;17138:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;17227:12;;:24;;17244:6;17227:24;:16;:24;:::i;:::-;17212:12;:39;-1:-1:-1;;;;;17279:18:0;;;;;;:9;:18;;;;;;:30;;17302:6;17279:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;17258:18:0;;;;;;:9;:18;;;;;;;;:51;;;;17321:37;;;;;;;17258:18;;;;17321:37;;;;;;;;;;17074:290;;:::o;11086:215::-;-1:-1:-1;;;;;11156:22:0;;11148:73;;;;-1:-1:-1;;;11148:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11254:6;;;11233:38;;-1:-1:-1;;;;;11233:38:0;;;;11254:6;;;11233:38;;;11278:6;:17;;-1:-1:-1;;;;;;11278:17:0;-1:-1:-1;;;;;11278:17:0;;;;;;;;;;11086:215::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1209",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24293",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "MSTORE"
								},
								{
									"begin": 11638,
									"end": 11888,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9817,
									"end": 9834,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9837,
									"end": 9849,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9837,
									"end": 9847,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9837,
									"end": 9849,
									"name": "AND"
								},
								{
									"begin": 9837,
									"end": 9849,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9837,
									"end": 9849,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9837,
									"end": 9849,
									"name": "JUMPDEST"
								},
								{
									"begin": 9856,
									"end": 9862,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "DUP1"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "DUP4"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "AND"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SWAP1"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "DUP2"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "OR"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "DUP3"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SSTORE"
								},
								{
									"begin": 9886,
									"end": 9929,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9886,
									"end": 9929,
									"name": "MLOAD"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SWAP3"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9856,
									"end": 9874,
									"name": "SWAP2"
								},
								{
									"begin": 9886,
									"end": 9929,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9886,
									"end": 9929,
									"name": "SWAP1"
								},
								{
									"begin": 9856,
									"end": 9862,
									"name": "DUP3"
								},
								{
									"begin": 9856,
									"end": 9862,
									"name": "SWAP1"
								},
								{
									"begin": 9886,
									"end": 9929,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP1"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "MLOAD"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP1"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP3"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "ADD"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP1"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP2"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "MSTORE"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP1"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP3"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2634BA329022BAB9379021B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP1"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP3"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "ADD"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP2"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "DUP3"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "MSTORE"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "SWAP2"
								},
								{
									"begin": 11666,
									"end": 11671,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11666,
									"end": 11671,
									"name": "SWAP2"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11666,
									"end": 11690,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "MLOAD"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP3"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "ADD"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP2"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "MSTORE"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP3"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP1"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP3"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "ADD"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP2"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "DUP3"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "MSTORE"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "SWAP2"
								},
								{
									"begin": 11697,
									"end": 11704,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11697,
									"end": 11704,
									"name": "SWAP2"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11697,
									"end": 11710,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11717,
									"end": 11726,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "DUP1"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "AND"
								},
								{
									"begin": 11729,
									"end": 11731,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "OR"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "SWAP1"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "SSTORE"
								},
								{
									"begin": 11753,
									"end": 11779,
									"name": "PUSH",
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 11738,
									"end": 11750,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11738,
									"end": 11779,
									"name": "DUP2"
								},
								{
									"begin": 11738,
									"end": 11779,
									"name": "SWAP1"
								},
								{
									"begin": 11738,
									"end": 11779,
									"name": "SSTORE"
								},
								{
									"begin": 11796,
									"end": 11806,
									"name": "CALLER"
								},
								{
									"begin": 11717,
									"end": 11726,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "DUP2"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "DUP2"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "MSTORE"
								},
								{
									"begin": 11717,
									"end": 11731,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "SWAP1"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "DUP2"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "MSTORE"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "DUP1"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "DUP4"
								},
								{
									"begin": 11786,
									"end": 11807,
									"name": "KECCAK256"
								},
								{
									"begin": 11786,
									"end": 11822,
									"name": "DUP6"
								},
								{
									"begin": 11786,
									"end": 11822,
									"name": "SWAP1"
								},
								{
									"begin": 11786,
									"end": 11822,
									"name": "SSTORE"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "DUP1"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "MLOAD"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP5"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "DUP6"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "MSTORE"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "MLOAD"
								},
								{
									"begin": 11796,
									"end": 11806,
									"name": "SWAP3"
								},
								{
									"begin": 11796,
									"end": 11806,
									"name": "SWAP4"
								},
								{
									"begin": 11717,
									"end": 11726,
									"name": "SWAP2"
								},
								{
									"begin": 11717,
									"end": 11726,
									"name": "SWAP3"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP3"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "DUP2"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP1"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SUB"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP1"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP2"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "ADD"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "SWAP1"
								},
								{
									"begin": 11836,
									"end": 11882,
									"name": "LOG3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "JUMPDEST"
								},
								{
									"begin": 3781,
									"end": 3791,
									"name": "CALLER"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "JUMPDEST"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "SWAP1"
								},
								{
									"begin": 3705,
									"end": 3797,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SLOAD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "AND"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ISZERO"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "MUL"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SUB"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "AND"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DIV"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "MSTORE"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "KECCAK256"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DIV"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "LT"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPI"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "MLOAD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "NOT"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "AND"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP4"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "OR"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP6"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SSTORE"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP6"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SSTORE"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ISZERO"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPI"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "GT"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ISZERO"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPI"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "MLOAD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SSTORE"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "POP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SWAP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP3"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "GT"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ISZERO"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPI"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP2"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "SSTORE"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "ADD"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMP"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "JUMPDEST"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "DUP1"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "CODECOPY"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11308,
									"end": 19131,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209aa656e272ff52e3bd7f280bcac4154a7a229b0f9537523d74c5e2c2613a2c3364736f6c63430005100032",
									".code": [
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "MSTORE"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "POP"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "LT"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "SHR"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "GT"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "GT"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMP"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPDEST"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMP"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPDEST"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "GT"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMP"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPDEST"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "EQ"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPI"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "JUMPDEST"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "DUP1"
										},
										{
											"begin": 11308,
											"end": 19131,
											"name": "REVERT"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMPDEST"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMPDEST"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MLOAD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MSTORE"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MLOAD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ADD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MSTORE"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MLOAD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ADD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP6"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ADD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ADD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "AND"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ISZERO"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMPI"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SUB"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MLOAD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP4"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SUB"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "EXP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SUB"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "NOT"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "AND"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MSTORE"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "ADD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMPDEST"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP3"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "MLOAD"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "DUP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP2"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SUB"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "RETURN"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "JUMPDEST"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "DUP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "DUP2"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "AND"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "ADD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "JUMPDEST"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "DUP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "MLOAD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP2"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "ISZERO"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "ISZERO"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "DUP3"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "MSTORE"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "MLOAD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "DUP2"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SUB"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "ADD"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "RETURN"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "JUMPDEST"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "JUMPDEST"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "DUP1"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "MLOAD"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SWAP2"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "DUP3"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "MSTORE"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "MLOAD"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SWAP1"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "DUP2"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SWAP1"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SUB"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "ADD"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SWAP1"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "RETURN"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "JUMPDEST"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "DUP1"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "DUP2"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "DUP2"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "AND"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP2"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "DUP2"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "ADD"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP1"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP2"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "AND"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP1"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "ADD"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "DUP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "MLOAD"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP3"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "AND"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "DUP3"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "MSTORE"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "MLOAD"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "DUP2"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SUB"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "ADD"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "RETURN"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "JUMPDEST"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "DUP1"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "DUP2"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "AND"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "SWAP1"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "ADD"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "JUMPDEST"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "DUP1"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "AND"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "JUMPDEST"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "JUMPDEST"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "STOP"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "JUMPDEST"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "JUMPDEST"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "DUP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP3"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "AND"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "DUP3"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "MSTORE"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "MLOAD"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "DUP2"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SUB"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "ADD"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "RETURN"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "JUMPDEST"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "JUMPDEST"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "DUP1"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "AND"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "SWAP1"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "JUMPDEST"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "DUP1"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "DUP2"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "DUP2"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "AND"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "SWAP2"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "ADD"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "AND"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "JUMPDEST"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "DUP1"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMPDEST"
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SLOAD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MLOAD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP9"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "AND"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ISZERO"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MUL"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP6"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "AND"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP5"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP5"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DIV"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP5"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DIV"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MUL"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MSTORE"
										},
										{
											"begin": 12397,
											"end": 12410,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12397,
											"end": 12410,
											"name": "SWAP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP3"
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12426,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ISZERO"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPI"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "LT"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPI"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SLOAD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DIV"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MUL"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "KECCAK256"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SLOAD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "MSTORE"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP4"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "GT"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPI"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SUB"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "AND"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "DUP3"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP2"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "JUMPDEST"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "SWAP1"
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "POP"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12437,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "JUMPDEST"
										},
										{
											"begin": 13466,
											"end": 13470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13518,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 13488,
											"end": 13498,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "JUMPDEST"
										},
										{
											"begin": 13502,
											"end": 13509,
											"name": "DUP5"
										},
										{
											"begin": 13511,
											"end": 13517,
											"name": "DUP5"
										},
										{
											"begin": 13479,
											"end": 13487,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13479,
											"end": 13518,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13479,
											"end": 13518,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13479,
											"end": 13518,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13532,
											"end": 13536,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP3"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "SWAP2"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "POP"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "POP"
										},
										{
											"begin": 13398,
											"end": 13542,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "JUMPDEST"
										},
										{
											"begin": 12562,
											"end": 12574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12562,
											"end": 12574,
											"name": "SLOAD"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "SWAP1"
										},
										{
											"begin": 12493,
											"end": 12580,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "JUMPDEST"
										},
										{
											"begin": 14078,
											"end": 14082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14091,
											"end": 14127,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "DUP5"
										},
										{
											"begin": 14109,
											"end": 14118,
											"name": "DUP5"
										},
										{
											"begin": 14120,
											"end": 14126,
											"name": "DUP5"
										},
										{
											"begin": 14091,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 14091,
											"end": 14127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14091,
											"end": 14127,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 14091,
											"end": 14127,
											"name": "JUMPDEST"
										},
										{
											"begin": 14134,
											"end": 14255,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 14143,
											"end": 14149,
											"name": "DUP5"
										},
										{
											"begin": 14151,
											"end": 14163,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 14151,
											"end": 14161,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14151,
											"end": 14163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14151,
											"end": 14163,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 14151,
											"end": 14163,
											"name": "JUMPDEST"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 14203,
											"end": 14209,
											"name": "DUP6"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "MLOAD"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "DUP1"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "ADD"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "DUP1"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "ADD"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "SWAP2"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "DUP11"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "AND"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14176,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "KECCAK256"
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "SWAP1"
										},
										{
											"begin": 14185,
											"end": 14197,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 14185,
											"end": 14195,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14185,
											"end": 14197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14185,
											"end": 14197,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 14185,
											"end": 14197,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "AND"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "DUP2"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "ADD"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "SWAP2"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "SWAP2"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "MSTORE"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "KECCAK256"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "SLOAD"
										},
										{
											"begin": 14165,
											"end": 14198,
											"name": "SWAP2"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14165,
											"end": 14202,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "AND"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 14165,
											"end": 14254,
											"name": "JUMPDEST"
										},
										{
											"begin": 14134,
											"end": 14142,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14134,
											"end": 14255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14134,
											"end": 14255,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 14134,
											"end": 14255,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14269,
											"end": 14273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP4"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "SWAP3"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "POP"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "POP"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "POP"
										},
										{
											"begin": 13987,
											"end": 14279,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMPDEST"
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "SLOAD"
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "AND"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12165,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14661,
											"end": 14861,
											"name": "JUMPDEST"
										},
										{
											"begin": 14741,
											"end": 14745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14754,
											"end": 14837,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 14763,
											"end": 14775,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 14763,
											"end": 14773,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14763,
											"end": 14775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14763,
											"end": 14775,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 14763,
											"end": 14775,
											"name": "JUMPDEST"
										},
										{
											"begin": 14777,
											"end": 14784,
											"name": "DUP5"
										},
										{
											"begin": 14786,
											"end": 14836,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 14825,
											"end": 14835,
											"name": "DUP6"
										},
										{
											"begin": 14786,
											"end": 14797,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14810,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14798,
											"end": 14808,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14798,
											"end": 14810,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14798,
											"end": 14810,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14798,
											"end": 14810,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP2"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "AND"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP3"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "MSTORE"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP1"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP4"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "ADD"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP4"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP4"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "MSTORE"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP2"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP3"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "DUP2"
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "KECCAK256"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "SWAP2"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "DUP13"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "AND"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "DUP2"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "MSTORE"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "SWAP3"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "MSTORE"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "KECCAK256"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "SLOAD"
										},
										{
											"begin": 14786,
											"end": 14820,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14836,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14786,
											"end": 14824,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14786,
											"end": 14836,
											"name": "AND"
										},
										{
											"begin": 14786,
											"end": 14836,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "AND"
										},
										{
											"begin": 12693,
											"end": 12700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "SWAP1"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "DUP2"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "MSTORE"
										},
										{
											"begin": 12716,
											"end": 12725,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "MSTORE"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "SWAP1"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "KECCAK256"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "SLOAD"
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "SWAP1"
										},
										{
											"begin": 12634,
											"end": 12740,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "JUMPDEST"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10212,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMPDEST"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SWAP1"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP2"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "SWAP2"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "EQ"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPI"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SUB"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "REVERT"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPDEST"
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "DUP1"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SLOAD"
										},
										{
											"begin": 10668,
											"end": 10708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10708,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SWAP1"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SWAP2"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "AND"
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SWAP1"
										},
										{
											"begin": 10668,
											"end": 10708,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10668,
											"end": 10708,
											"name": "SWAP1"
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "DUP4"
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "SWAP1"
										},
										{
											"begin": 10668,
											"end": 10708,
											"name": "LOG3"
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10715,
											"end": 10734,
											"name": "DUP1"
										},
										{
											"begin": 10715,
											"end": 10734,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10715,
											"end": 10734,
											"name": "AND"
										},
										{
											"begin": 10715,
											"end": 10734,
											"name": "SWAP1"
										},
										{
											"begin": 10715,
											"end": 10734,
											"name": "SSTORE"
										},
										{
											"begin": 10610,
											"end": 10740,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "JUMPDEST"
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 12014,
											"end": 12019,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "JUMPDEST"
										},
										{
											"begin": 12007,
											"end": 12021,
											"name": "SWAP1"
										},
										{
											"begin": 12007,
											"end": 12021,
											"name": "POP"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "SWAP1"
										},
										{
											"begin": 11948,
											"end": 12027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "JUMPDEST"
										},
										{
											"begin": 10046,
											"end": 10053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10075,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10069,
											"end": 10075,
											"name": "AND"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "SWAP1"
										},
										{
											"begin": 10008,
											"end": 10081,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12222,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 12292,
											"end": 12299,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SLOAD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP9"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "AND"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ISZERO"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MUL"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP6"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "AND"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP5"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP5"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DIV"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP4"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP5"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DIV"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MUL"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP3"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MSTORE"
										},
										{
											"begin": 12263,
											"end": 12276,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12263,
											"end": 12276,
											"name": "SWAP4"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP3"
										},
										{
											"begin": 12292,
											"end": 12299,
											"name": "SWAP1"
										},
										{
											"begin": 12292,
											"end": 12299,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12292,
											"end": 12299,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ISZERO"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "JUMPI"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "LT"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "JUMPI"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SLOAD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DIV"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MUL"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "JUMP"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "JUMPDEST"
										},
										{
											"begin": 15840,
											"end": 15844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 10212,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMPDEST"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SWAP1"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP2"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "SWAP2"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "EQ"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPI"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SUB"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "REVERT"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPDEST"
										},
										{
											"begin": 15853,
											"end": 15880,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15859,
											"end": 15871,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15859,
											"end": 15869,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15859,
											"end": 15871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15859,
											"end": 15871,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15859,
											"end": 15871,
											"name": "JUMPDEST"
										},
										{
											"begin": 15873,
											"end": 15879,
											"name": "DUP4"
										},
										{
											"begin": 15853,
											"end": 15858,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15853,
											"end": 15880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15853,
											"end": 15880,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15853,
											"end": 15880,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15894,
											"end": 15898,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "SWAP2"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "SWAP1"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "POP"
										},
										{
											"begin": 15784,
											"end": 15904,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 15333,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15418,
											"end": 15422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15431,
											"end": 15560,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 15440,
											"end": 15452,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 15440,
											"end": 15450,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15440,
											"end": 15452,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15440,
											"end": 15452,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 15440,
											"end": 15452,
											"name": "JUMPDEST"
										},
										{
											"begin": 15454,
											"end": 15461,
											"name": "DUP5"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 15502,
											"end": 15517,
											"name": "DUP6"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "MLOAD"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "DUP1"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "ADD"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "DUP1"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "DUP2"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "ADD"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "SWAP2"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "CODECOPY"
										},
										{
											"begin": 15463,
											"end": 15474,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15487,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15475,
											"end": 15487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15475,
											"end": 15487,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15475,
											"end": 15487,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP1"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP2"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "AND"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP3"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP1"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP4"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "ADD"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP4"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP1"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP4"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP2"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP3"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "SWAP1"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "DUP2"
										},
										{
											"begin": 15463,
											"end": 15488,
											"name": "KECCAK256"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "SWAP2"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "DUP14"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "AND"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "DUP2"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "SWAP3"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "MSTORE"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "SWAP1"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "KECCAK256"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "SLOAD"
										},
										{
											"begin": 15463,
											"end": 15497,
											"name": "SWAP2"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "SWAP1"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15463,
											"end": 15501,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "AND"
										},
										{
											"begin": 15463,
											"end": 15559,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST"
										},
										{
											"begin": 13005,
											"end": 13009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13018,
											"end": 13060,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13028,
											"end": 13040,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 13028,
											"end": 13038,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13028,
											"end": 13040,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13028,
											"end": 13040,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 13028,
											"end": 13040,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13051,
											"name": "DUP5"
										},
										{
											"begin": 13053,
											"end": 13059,
											"name": "DUP5"
										},
										{
											"begin": 13018,
											"end": 13027,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 13018,
											"end": 13060,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "SWAP2"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP3"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "AND"
										},
										{
											"begin": 13212,
											"end": 13219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP2"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "MSTORE"
										},
										{
											"begin": 13235,
											"end": 13246,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP2"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "MSTORE"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP1"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "DUP4"
										},
										{
											"begin": 13235,
											"end": 13253,
											"name": "KECCAK256"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP4"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP5"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "AND"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "DUP3"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "MSTORE"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP2"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP1"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP2"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "MSTORE"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "KECCAK256"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SLOAD"
										},
										{
											"begin": 13235,
											"end": 13262,
											"name": "SWAP1"
										},
										{
											"begin": 13138,
											"end": 13268,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "JUMPDEST"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 10212,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 10212,
											"end": 10224,
											"name": "JUMPDEST"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "SWAP1"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP2"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "SWAP2"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "AND"
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "EQ"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPI"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP3"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MSTORE"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "MLOAD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "DUP2"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SUB"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "ADD"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "SWAP1"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "REVERT"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 10194,
											"end": 10261,
											"name": "JUMPDEST"
										},
										{
											"begin": 10954,
											"end": 10982,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10973,
											"end": 10981,
											"name": "DUP2"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 10954,
											"end": 10982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10954,
											"end": 10982,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10954,
											"end": 10982,
											"name": "JUMPDEST"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10885,
											"end": 10988,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3705,
											"end": 3797,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3705,
											"end": 3797,
											"name": "JUMPDEST"
										},
										{
											"begin": 3781,
											"end": 3791,
											"name": "CALLER"
										},
										{
											"begin": 3705,
											"end": 3797,
											"name": "SWAP1"
										},
										{
											"begin": 3705,
											"end": 3797,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18504,
											"end": 18523,
											"name": "DUP4"
										},
										{
											"begin": 18504,
											"end": 18523,
											"name": "AND"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "JUMPI"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "MSTORE"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "ADD"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP1"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP1"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "ADD"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP3"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SUB"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP3"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "MSTORE"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "MSTORE"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "ADD"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP1"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SWAP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "CODECOPY"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "ADD"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SWAP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "POP"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "POP"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "MLOAD"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "DUP1"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SWAP2"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SUB"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "SWAP1"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "REVERT"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 18496,
											"end": 18564,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18579,
											"end": 18600,
											"name": "DUP3"
										},
										{
											"begin": 18579,
											"end": 18600,
											"name": "AND"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "JUMPI"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP3"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SUB"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP3"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SWAP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "CODECOPY"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SWAP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "POP"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "POP"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "MLOAD"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SWAP2"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SUB"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "SWAP1"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "REVERT"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 18571,
											"end": 18639,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP1"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP5"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "AND"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP2"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP2"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "MSTORE"
										},
										{
											"begin": 18648,
											"end": 18659,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "SWAP1"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP2"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "MSTORE"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP1"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "DUP4"
										},
										{
											"begin": 18648,
											"end": 18666,
											"name": "KECCAK256"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "SWAP5"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "DUP8"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "AND"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "DUP1"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "DUP5"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "MSTORE"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "SWAP5"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "DUP3"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "MSTORE"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "SWAP2"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "DUP3"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "SWAP1"
										},
										{
											"begin": 18648,
											"end": 18675,
											"name": "KECCAK256"
										},
										{
											"begin": 18648,
											"end": 18684,
											"name": "DUP6"
										},
										{
											"begin": 18648,
											"end": 18684,
											"name": "SWAP1"
										},
										{
											"begin": 18648,
											"end": 18684,
											"name": "SSTORE"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP2"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MLOAD"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP6"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP2"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MSTORE"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP2"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MLOAD"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP3"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP2"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP1"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SUB"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP1"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP2"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "ADD"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "SWAP1"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "LOG3"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "POP"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "POP"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "POP"
										},
										{
											"begin": 18414,
											"end": 18734,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16458,
											"end": 16478,
											"name": "DUP4"
										},
										{
											"begin": 16458,
											"end": 16478,
											"name": "AND"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "JUMPI"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "MSTORE"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "ADD"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP1"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP1"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "ADD"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP3"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SUB"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP3"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "MSTORE"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "MSTORE"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "ADD"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP1"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SWAP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "CODECOPY"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "ADD"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SWAP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "POP"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "POP"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "MLOAD"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "DUP1"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SWAP2"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SUB"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "SWAP1"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "REVERT"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16450,
											"end": 16520,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16535,
											"end": 16558,
											"name": "DUP3"
										},
										{
											"begin": 16535,
											"end": 16558,
											"name": "AND"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "JUMPI"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "MSTORE"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP3"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SUB"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP3"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "MSTORE"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "MSTORE"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SWAP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "CODECOPY"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "ADD"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SWAP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "POP"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "POP"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "MLOAD"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "DUP1"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SWAP2"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SUB"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "SWAP1"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "REVERT"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16527,
											"end": 16598,
											"name": "JUMPDEST"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16649,
											"end": 16655,
											"name": "DUP2"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "MLOAD"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "DUP1"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "ADD"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "MSTORE"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "DUP1"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "DUP2"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "MSTORE"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "ADD"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "SWAP2"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "DUP7"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "AND"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "SWAP1"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "DUP2"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "MSTORE"
										},
										{
											"begin": 16627,
											"end": 16636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "MSTORE"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "SWAP1"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "KECCAK256"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "SLOAD"
										},
										{
											"begin": 16627,
											"end": 16644,
											"name": "SWAP2"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "SWAP1"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16627,
											"end": 16648,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "AND"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16627,
											"end": 16698,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "DUP1"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "DUP6"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "AND"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "SWAP1"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "DUP2"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "MSTORE"
										},
										{
											"begin": 16607,
											"end": 16616,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "MSTORE"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "DUP1"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "DUP3"
										},
										{
											"begin": 16607,
											"end": 16624,
											"name": "KECCAK256"
										},
										{
											"begin": 16607,
											"end": 16698,
											"name": "SWAP4"
										},
										{
											"begin": 16607,
											"end": 16698,
											"name": "SWAP1"
										},
										{
											"begin": 16607,
											"end": 16698,
											"name": "SWAP4"
										},
										{
											"begin": 16607,
											"end": 16698,
											"name": "SSTORE"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "SWAP1"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "DUP5"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "AND"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "DUP2"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "MSTORE"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "KECCAK256"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "SLOAD"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "SWAP1"
										},
										{
											"begin": 16753,
											"end": 16759,
											"name": "DUP3"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16728,
											"end": 16752,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "AND"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16728,
											"end": 16760,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP1"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP5"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "AND"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP2"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP2"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "MSTORE"
										},
										{
											"begin": 16705,
											"end": 16714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP2"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "MSTORE"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "SWAP2"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "DUP3"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "KECCAK256"
										},
										{
											"begin": 16705,
											"end": 16760,
											"name": "SWAP5"
										},
										{
											"begin": 16705,
											"end": 16760,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16760,
											"name": "SWAP5"
										},
										{
											"begin": 16705,
											"end": 16760,
											"name": "SSTORE"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "DUP1"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "MLOAD"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "DUP6"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "DUP2"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "MSTORE"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "MLOAD"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "SWAP2"
										},
										{
											"begin": 16705,
											"end": 16725,
											"name": "SWAP4"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP3"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "DUP8"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "AND"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP3"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP3"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP2"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "DUP3"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SUB"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "ADD"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "SWAP1"
										},
										{
											"begin": 16772,
											"end": 16807,
											"name": "LOG3"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "POP"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "POP"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "POP"
										},
										{
											"begin": 16364,
											"end": 16813,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5664,
											"end": 5842,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5664,
											"end": 5842,
											"name": "JUMPDEST"
										},
										{
											"begin": 5750,
											"end": 5757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5794,
											"name": "DUP2"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "DUP5"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "DUP5"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "GT"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "ISZERO"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "JUMPI"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "AND"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ISZERO"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "JUMPI"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "EXP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "NOT"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "AND"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP3"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "REVERT"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5766,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SUB"
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5842,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "JUMPDEST"
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "DUP3"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "DUP3"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "ADD"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP4"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP2"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "LT"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "ISZERO"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "JUMPI"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP1"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP2"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MSTORE"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP3"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MSTORE"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP3"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MSTORE"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP3"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MSTORE"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "MLOAD"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "DUP2"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SUB"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "REVERT"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "JUMPDEST"
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "SWAP4"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4837,
											"end": 5004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17074,
											"end": 17364,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 17074,
											"end": 17364,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17146,
											"end": 17167,
											"name": "DUP3"
										},
										{
											"begin": 17146,
											"end": 17167,
											"name": "AND"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "JUMPI"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP1"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP2"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MSTORE"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP3"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "ADD"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MSTORE"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP3"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "ADD"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MSTORE"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP3"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "ADD"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MSTORE"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "SWAP1"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "MLOAD"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "SWAP1"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "DUP2"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "SWAP1"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "SUB"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "ADD"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "SWAP1"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "REVERT"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 17138,
											"end": 17203,
											"name": "JUMPDEST"
										},
										{
											"begin": 17227,
											"end": 17239,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17227,
											"end": 17239,
											"name": "SLOAD"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "SWAP1"
										},
										{
											"begin": 17244,
											"end": 17250,
											"name": "DUP3"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17227,
											"end": 17243,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "AND"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 17227,
											"end": 17251,
											"name": "JUMPDEST"
										},
										{
											"begin": 17212,
											"end": 17224,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17212,
											"end": 17251,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "DUP3"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "AND"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "SWAP1"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "DUP2"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "MSTORE"
										},
										{
											"begin": 17279,
											"end": 17288,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "MSTORE"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "SWAP1"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "KECCAK256"
										},
										{
											"begin": 17279,
											"end": 17297,
											"name": "SLOAD"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "SWAP1"
										},
										{
											"begin": 17302,
											"end": 17308,
											"name": "DUP3"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17279,
											"end": 17301,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "AND"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 17279,
											"end": 17309,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP4"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "AND"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP2"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP2"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "MSTORE"
										},
										{
											"begin": 17258,
											"end": 17267,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "SWAP1"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP2"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "MSTORE"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP1"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP4"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "KECCAK256"
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "SWAP5"
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "SWAP1"
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "SWAP5"
										},
										{
											"begin": 17258,
											"end": 17309,
											"name": "SSTORE"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "DUP4"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "MLOAD"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "DUP6"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "DUP2"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "MSTORE"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP4"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "MLOAD"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "SWAP3"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "SWAP4"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "SWAP2"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "SWAP3"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP3"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "DUP2"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP1"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SUB"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP1"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP2"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "ADD"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "SWAP1"
										},
										{
											"begin": 17321,
											"end": 17358,
											"name": "LOG3"
										},
										{
											"begin": 17074,
											"end": 17364,
											"name": "POP"
										},
										{
											"begin": 17074,
											"end": 17364,
											"name": "POP"
										},
										{
											"begin": 17074,
											"end": 17364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11086,
											"end": 11301,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 11086,
											"end": 11301,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11156,
											"end": 11178,
											"name": "DUP2"
										},
										{
											"begin": 11156,
											"end": 11178,
											"name": "AND"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "JUMPI"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "MSTORE"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "ADD"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP1"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP1"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "ADD"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP3"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SUB"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP3"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "MSTORE"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "MSTORE"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "ADD"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP1"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SWAP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "CODECOPY"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "ADD"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SWAP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "POP"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "POP"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "MLOAD"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "DUP1"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SWAP2"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SUB"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "SWAP1"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "REVERT"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11148,
											"end": 11221,
											"name": "JUMPDEST"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "DUP1"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "SLOAD"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "DUP1"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "DUP6"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "AND"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "SWAP4"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "SWAP3"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "AND"
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "SWAP2"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "SWAP2"
										},
										{
											"begin": 11233,
											"end": 11271,
											"name": "LOG3"
										},
										{
											"begin": 11278,
											"end": 11284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "DUP1"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP3"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP3"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP2"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP2"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "OR"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11278,
											"end": 11295,
											"name": "SSTORE"
										},
										{
											"begin": 11086,
											"end": 11301,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x5f79de6ee4aafe87cfd94b15dc67431f5d8227577d5046e2ad78d856aac359c9\",\"urls\":[\"bzz-raw://7a4f5bbd5ceb9b940e6c43166db3e33bf79f1b43b65b2d3a2bc576a3defefaca\",\"dweb:/ipfs/QmaMnHHzipacCznW9SMm4emoZa7teRSBQXZWZ2RupaSfVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/BEP20.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x5f79de6ee4aafe87cfd94b15dc67431f5d8227577d5046e2ad78d856aac359c9\",\"urls\":[\"bzz-raw://7a4f5bbd5ceb9b940e6c43166db3e33bf79f1b43b65b2d3a2bc576a3defefaca\",\"dweb:/ipfs/QmaMnHHzipacCznW9SMm4emoZa7teRSBQXZWZ2RupaSfVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x5f79de6ee4aafe87cfd94b15dc67431f5d8227577d5046e2ad78d856aac359c9\",\"urls\":[\"bzz-raw://7a4f5bbd5ceb9b940e6c43166db3e33bf79f1b43b65b2d3a2bc576a3defefaca\",\"dweb:/ipfs/QmaMnHHzipacCznW9SMm4emoZa7teRSBQXZWZ2RupaSfVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x5f79de6ee4aafe87cfd94b15dc67431f5d8227577d5046e2ad78d856aac359c9\",\"urls\":[\"bzz-raw://7a4f5bbd5ceb9b940e6c43166db3e33bf79f1b43b65b2d3a2bc576a3defefaca\",\"dweb:/ipfs/QmaMnHHzipacCznW9SMm4emoZa7teRSBQXZWZ2RupaSfVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20.sol\":4602:9030  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20.sol\":4602:9030  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b81986187154184c1c95011420f4a351b40a9760db2f5ab6324345e28f7a562564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b81986187154184c1c95011420f4a351b40a9760db2f5ab6324345e28f7a562564736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB8 NOT DUP7 XOR PUSH18 0x54184C1C95011420F4A351B40A9760DB2F5A 0xB6 ORIGIN NUMBER GASLIMIT 0xE2 DUP16 PUSH27 0x562564736F6C634300051000320000000000000000000000000000 ",
							"sourceMap": "4602:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b81986187154184c1c95011420f4a351b40a9760db2f5ab6324345e28f7a562564736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB8 NOT DUP7 XOR PUSH18 0x54184C1C95011420F4A351B40A9760DB2F5A 0xB6 ORIGIN NUMBER GASLIMIT 0xE2 DUP16 PUSH27 0x562564736F6C634300051000320000000000000000000000000000 ",
							"sourceMap": "4602:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4602,
									"end": 9030,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4602,
									"end": 9030,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b81986187154184c1c95011420f4a351b40a9760db2f5ab6324345e28f7a562564736f6c63430005100032",
									".code": [
										{
											"begin": 4602,
											"end": 9030,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "ADDRESS"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "EQ"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "MSTORE"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "DUP1"
										},
										{
											"begin": 4602,
											"end": 9030,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20.sol\":{\"keccak256\":\"0x5f79de6ee4aafe87cfd94b15dc67431f5d8227577d5046e2ad78d856aac359c9\",\"urls\":[\"bzz-raw://7a4f5bbd5ceb9b940e6c43166db3e33bf79f1b43b65b2d3a2bc576a3defefaca\",\"dweb:/ipfs/QmaMnHHzipacCznW9SMm4emoZa7teRSBQXZWZ2RupaSfVw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20.sol",
					"exportedSymbols": {
						"BEP20Token": [
							899
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 900,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:9:0"
									},
									"scope": 88,
									"src": "119:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "276:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "276:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "275:7:0"
									},
									"scope": 88,
									"src": "233:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "381:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "380:15:0"
									},
									"scope": 88,
									"src": "340:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "488:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "487:15:0"
									},
									"scope": 88,
									"src": "449:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "605:9:0"
									},
									"scope": 88,
									"src": "563:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "753:9:0"
									},
									"scope": 88,
									"src": "695:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "994:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "993:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1047:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1046:6:0"
									},
									"scope": 88,
									"src": "976:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1339:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1395:9:0"
									},
									"scope": 88,
									"src": "1321:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2078:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2060:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2112:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2111:6:0"
									},
									"scope": 88,
									"src": "2044:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2438:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2454:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2437:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2507:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2506:6:0"
									},
									"scope": 88,
									"src": "2416:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2691:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2713:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2733:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2690:57:0"
									},
									"src": "2676:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2918:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2941:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2917:63:0"
									},
									"src": "2903:78:0"
								}
							],
							"scope": 900,
							"src": "29:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3696:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3696:0:0"
									},
									"scope": 113,
									"src": "3672:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3767:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3774:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3750:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3750:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:17:0"
									},
									"scope": 113,
									"src": "3705:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3860:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "3867:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3867:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4004:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4004:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3997:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3820:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3846:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3845:14:0"
									},
									"scope": 113,
									"src": "3803:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "3498:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4904:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4911:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4927:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4923:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4911:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4943:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4948:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4951:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "4935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4935:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4935:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4997:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4990:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4850:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4861:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4849:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 298,
									"src": "4837:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5326:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5347:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5350:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5340:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5340:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5333:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5272:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5283:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5271:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5316:9:0"
									},
									"scope": 298,
									"src": "5259:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5759:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5774:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5782:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "5766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5766:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5766:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5802:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5802:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5835:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5828:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5677:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5688:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5749:9:0"
									},
									"scope": 298,
									"src": "5664:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6140:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6360:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6365:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6356:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6368:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6384:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6377:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6401:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6413:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6413:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6401:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6433:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6433:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6445:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "6425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6425:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6425:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6490:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6086:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6097:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6085:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6130:9:0"
									},
									"scope": 298,
									"src": "6073:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7015:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7033:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7036:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7039:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7029:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7029:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7022:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6960:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7005:9:0"
									},
									"scope": 298,
									"src": "6948:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7633:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7715:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7718:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "7703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7703:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7703:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7738:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7738:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7854:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7847:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7573:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7573:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7550:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7624:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7623:9:0"
									},
									"scope": 298,
									"src": "7538:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8361:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8379:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8382:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8385:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8375:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8375:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8368:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8307:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8318:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8306:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8351:9:0"
									},
									"scope": 298,
									"src": "8294:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8966:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8981:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8986:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8989:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "8973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8973:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8973:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9016:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9020:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9016:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9009:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8884:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8895:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8906:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8906:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8883:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8956:9:0"
									},
									"scope": 298,
									"src": "8871:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "4602:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9561:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9561:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9574:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9574:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9630:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9661:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9629:57:0"
									},
									"src": "9603:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9810:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9817:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9817:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9837:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9837:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9817:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9865:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9856:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9856:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9915:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9907:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9919:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9886:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9886:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9881:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9798:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9810:0:0"
									},
									"scope": 404,
									"src": "9786:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10055:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10069:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10062:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10022:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10045:9:0"
									},
									"scope": 404,
									"src": "10008:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10187:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10202:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10212:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10212:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10202:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10226:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "10194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10194:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10194:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10268:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10184:2:0"
									},
									"src": "10166:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10656:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10705:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10668:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10668:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10663:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10715:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10732:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10724:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10715:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10715:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10646:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10646:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10636:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10656:0:0"
									},
									"scope": 404,
									"src": "10610:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10947:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10973:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10954:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10954:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10954:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10937:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10937:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10911:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10947:0:0"
									},
									"scope": 404,
									"src": "10885:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11141:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11156:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11176:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11168:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11168:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11156:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11180:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "11148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11148:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11148:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11233:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11228:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11278:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11287:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11278:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11278:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11114:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11113:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11141:0:0"
									},
									"scope": 404,
									"src": "11086:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "9541:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11331:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11331:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11340:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11340:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11348:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11348:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899,
								404,
								88,
								113
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11367:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11361:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11380:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11394:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11403:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11394:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11414:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11447:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11456:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11447:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11476:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11467:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11487:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11523:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11523:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11556:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11556:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11584:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11584:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11611:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11611:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11659:229:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11666:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4c697465204575726f20436f696e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11674:16:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_42f3bdb6bf205917b0104882a9fd703d1531be626a3708bf566782c37d083dff",
															"typeString": "literal_string \"Lite Euro Coin\""
														},
														"value": "Lite Euro Coin"
													},
													"src": "11666:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11666:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11697:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "45",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11707:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_434b529473163ef4ed9c9341d9b7250ab9183c27e7add004c3bba38c56274e24",
															"typeString": "literal_string \"E\""
														},
														"value": "E"
													},
													"src": "11697:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11697:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11717:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11729:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11717:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11717:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11738:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3530303030303030303030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11753:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														},
														"value": "50000000000000000000000000"
													},
													"src": "11738:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11738:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11786:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11796:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11796:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11786:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11810:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11786:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11786:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11853:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11845:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11857:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11857:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11869:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11836:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11836:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11831:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11649:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11659:0:0"
									},
									"scope": 899,
									"src": "11638:250:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "12000:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12014:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "12007:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11965:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "11991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11990:9:0"
									},
									"scope": 899,
									"src": "11948:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "12136:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "12150:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "12143:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12103:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "12129:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12128:7:0"
									},
									"scope": 899,
									"src": "12086:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12278:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "12285:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12237:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12263:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12262:15:0"
									},
									"scope": 899,
									"src": "12222:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12412:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12426:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12419:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12371:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12397:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12396:15:0"
									},
									"scope": 899,
									"src": "12358:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12548:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12562:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12555:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12513:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12539:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12538:9:0"
									},
									"scope": 899,
									"src": "12493:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12702:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12716:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12716:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12709:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12653:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12652:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12692:9:0"
									},
									"scope": 899,
									"src": "12634:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "13011:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13028:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13028:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "13042:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13053:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "13018:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13018:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "13018:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13074:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "13067:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12951:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13004:6:0"
									},
									"scope": 899,
									"src": "12934:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "13221:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13235:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "13247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13235:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "13254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13235:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "13228:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13157:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13172:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13156:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13211:9:0"
									},
									"scope": 899,
									"src": "13138:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13472:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13488:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13479:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13479:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13479:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13532:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13525:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13432:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13414:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13465:6:0"
									},
									"scope": 899,
									"src": "13398:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "14084:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "14109:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "14120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "14091:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14091:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "14091:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14151:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "14203:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14211:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14165:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "14177:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14165:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14185:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14185:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14165:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14165:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14165:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14134:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14134:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "14134:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14269:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "14262:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14009:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14025:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14044:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14008:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14078:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14077:6:0"
									},
									"scope": 899,
									"src": "13987:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14747:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14763:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14763:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14786:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14798:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14798:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14786:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14812:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14786:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14786:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14786:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14754:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14754:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14754:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14851:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14844:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14688:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14705:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14687:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14740:6:0"
									},
									"scope": 899,
									"src": "14661:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "15424:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15440:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15440:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "15454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15502:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15519:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15463:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15475:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15475:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15463:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15489:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15463:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15463:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15463:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "15431:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15431:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "15431:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15574:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15567:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15377:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15359:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15418:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15417:6:0"
									},
									"scope": 899,
									"src": "15333:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "15846:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15859:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15859:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "15853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15853:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "15853:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15894:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 681,
												"nodeType": "Return",
												"src": "15887:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15821:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15821:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15797:16:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15840:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15839:6:0"
									},
									"scope": 899,
									"src": "15784:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "16443:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 693,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "16458:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16476:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16468:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16458:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16480:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16450:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "16450:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16535:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16556:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16548:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16535:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16560:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16527:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "16527:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16607:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 712,
														"indexExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16607:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16649:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16657:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16627:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16637:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16627:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16627:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16627:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16607:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "16607:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 722,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16705:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16715:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16705:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 729,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16753:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16728:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "16738:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16728:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16728:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16728:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16705:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "16705:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 734,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16781:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16772:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16772:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "16767:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "16383:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "16399:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "16418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16382:51:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16443:0:0"
									},
									"scope": 899,
									"src": "16364:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "17131:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 748,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "17146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17165:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17157:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17157:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17146:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17169:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17138:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "17138:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 756,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17212:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 759,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "17244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 757,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17227:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17227:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17227:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17212:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "17212:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 763,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17258:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 765,
														"indexExpression": {
															"argumentTypes": null,
															"id": 764,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "17268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17258:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 770,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "17302:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17279:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "17289:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17279:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17279:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17279:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17258:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "17258:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17338:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "17342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17321:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "17316:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "17089:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "17106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17088:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17131:0:0"
									},
									"scope": 899,
									"src": "17074:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17729:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 791,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "17744:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17763:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17755:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17755:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17744:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17767:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17736:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "17736:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17812:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17812:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17856:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17864:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17833:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "17843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17833:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17833:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17833:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17812:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "17812:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 811,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17908:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17940:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17923:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17923:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17923:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17908:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "17908:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17985:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17977:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17977:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "17989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17959:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17959:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "17954:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17704:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17686:33:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17729:0:0"
									},
									"scope": 899,
									"src": "17672:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "18489:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18504:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18521:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18513:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18513:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18504:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18525:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "18496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18496:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "18496:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 846,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "18579:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18598:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18590:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18590:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18579:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18602:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "18571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18571:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "18571:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18648:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 857,
															"indexExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18660:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18648:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 858,
														"indexExpression": {
															"argumentTypes": null,
															"id": 856,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18648:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "18678:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18648:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18648:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 863,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "18705:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "18721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18696:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "18691:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "18432:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "18447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "18464:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18431:48:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18489:0:0"
									},
									"scope": 899,
									"src": "18414:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "18967:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "18989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "18974:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18974:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "18974:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "19012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "19021:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 892,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "19074:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19082:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 885,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "19035:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 887,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 886,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "19047:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19035:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 888,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "19056:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19056:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19035:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "19035:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19035:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "19003:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19003:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "19003:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18942:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18924:33:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18967:0:0"
									},
									"scope": 899,
									"src": "18906:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "11308:7823:0"
						}
					],
					"src": "2:19129:0"
				},
				"id": 0
			}
		}
	}
}